#include <linux/module.h>
#include <linux/vermagic.h>
#include <linux/compiler.h>

MODULE_INFO(vermagic, VERMAGIC_STRING);

#undef unix
struct module __this_module
__attribute__((section(".gnu.linkonce.this_module"))) = {
 .name = __stringify(KBUILD_MODNAME),
 .init = init_module,
#ifdef CONFIG_MODULE_UNLOAD
 .exit = cleanup_module,
#endif
};

static const struct modversion_info ____versions[]
__attribute_used__
__attribute__((section("__versions"))) = {
	{ 0x93900e92, "struct_module" },
	{ 0x559cf709, "mb_cache_entry_find_next" },
	{ 0x46c77270, "kmem_cache_destroy" },
	{ 0x12da5bb2, "__kmalloc" },
	{ 0x191594aa, "security_ops" },
	{ 0x6b1b67d3, "__bdevname" },
	{ 0x995691f9, "sb_min_blocksize" },
	{ 0x5b6f9893, "generic_getxattr" },
	{ 0x8ef7e5aa, "journal_restart" },
	{ 0x8ce47b8c, "__bread" },
	{ 0xd447bd53, "journal_abort" },
	{ 0x69058dd3, "journal_check_available_features" },
	{ 0xf4ffa2a1, "make_bad_inode" },
	{ 0x9acf8809, "generic_file_llseek" },
	{ 0xe5c9b2ee, "journal_release_buffer" },
	{ 0xecc468d2, "__mark_inode_dirty" },
	{ 0x3303442a, "__set_page_dirty_nobuffers" },
	{ 0x3b24657e, "vfs_get_dqinfo" },
	{ 0xc753cef6, "dquot_acquire" },
	{ 0x9a49d4e4, "vfs_quota_sync" },
	{ 0xc722227e, "posix_acl_clone" },
	{ 0x640a7078, "posix_acl_create_masq" },
	{ 0x84cf62f8, "bd_release" },
	{ 0x633e7bed, "bdev_read_only" },
	{ 0x1ecb9943, "posix_acl_to_xattr" },
	{ 0x79aa04a2, "get_random_bytes" },
	{ 0x74cc238d, "current_kernel_time" },
	{ 0x8735bde9, "vfs_quota_on" },
	{ 0x4323f32a, "dquot_mark_dquot_dirty" },
	{ 0x170e73d7, "malloc_sizes" },
	{ 0x5f3b7051, "log_wait_commit" },
	{ 0x182e5c81, "seq_puts" },
	{ 0x5ae3afc2, "is_bad_inode" },
	{ 0xa26c4f86, "journal_start" },
	{ 0xee91e6d8, "journal_init_inode" },
	{ 0x25820c64, "fs_overflowuid" },
	{ 0xa28557e7, "generic_file_open" },
	{ 0xc1d50464, "match_strdup" },
	{ 0x2c8cf789, "mb_cache_entry_get" },
	{ 0x42b890e6, "ll_rw_block" },
	{ 0xc0332c49, "__lock_buffer" },
	{ 0x20000329, "simple_strtoul" },
	{ 0xc88c7ada, "_spin_lock" },
	{ 0x6def2db2, "half_md4_transform" },
	{ 0xd9644e77, "generic_file_aio_read" },
	{ 0xe7fe9ed, "dput" },
	{ 0x18bc4d9b, "mb_cache_entry_release" },
	{ 0x4364c43c, "seq_printf" },
	{ 0xf9efeca3, "mb_cache_entry_alloc" },
	{ 0xa03d6a57, "__get_user_4" },
	{ 0x86e9acae, "match_token" },
	{ 0xe6fec860, "nobh_commit_write" },
	{ 0xc659a6d6, "rwsem_down_write_failed" },
	{ 0xbf02d7bc, "generic_file_writev" },
	{ 0x85df9b6c, "strsep" },
	{ 0x74cbae47, "journal_stop" },
	{ 0x280390ba, "generic_read_dir" },
	{ 0x61aa60f0, "unlock_buffer" },
	{ 0x5dbaae41, "generic_setxattr" },
	{ 0xa6b54660, "redirty_page_for_writepage" },
	{ 0x440684a4, "generic_file_aio_write" },
	{ 0x6d0cc96, "set_page_dirty" },
	{ 0x327320b9, "journal_clear_err" },
	{ 0xd533bec7, "__might_sleep" },
	{ 0x1187067c, "inode_setattr" },
	{ 0xdfd3883, "journal_destroy" },
	{ 0xf46e90b, "block_prepare_write" },
	{ 0x2ec42a46, "vfs_quota_on_mount" },
	{ 0xda4008e6, "cond_resched" },
	{ 0x16b86be, "kunmap_atomic" },
	{ 0xf6c3815e, "rb_first" },
	{ 0x8075e93, "invalidate_bdev" },
	{ 0xaa768bc1, "journal_get_create_access" },
	{ 0xd32e52c7, "posix_acl_chmod_masq" },
	{ 0x2aa5731c, "mb_cache_entry_find_first" },
	{ 0xe8873f2f, "__insert_inode_hash" },
	{ 0xff1bdbf7, "journal_get_undo_access" },
	{ 0x11bb1097, "kmap_atomic" },
	{ 0x8040b66, "mpage_readpages" },
	{ 0x436e7308, "journal_get_write_access" },
	{ 0xb56717cf, "xtime" },
	{ 0x6570352a, "mpage_readpage" },
	{ 0xad71d604, "dquot_free_space" },
	{ 0x474d736, "inode_add_bytes" },
	{ 0x628b5df9, "dquot_alloc_inode" },
	{ 0xc7e501b4, "journal_update_format" },
	{ 0x4e5faac9, "sync_inode" },
	{ 0x1b7d4074, "printk" },
	{ 0x2d97fac8, "d_rehash" },
	{ 0xac6fad12, "dquot_alloc_space" },
	{ 0x74d980bd, "journal_try_to_free_buffers" },
	{ 0x666660ec, "find_or_create_page" },
	{ 0x8cba25c9, "rwsem_wake" },
	{ 0x97426c7c, "d_alloc_root" },
	{ 0x1075bf0, "panic" },
	{ 0xdc01a06e, "find_next_zero_bit" },
	{ 0x7ee8c5cb, "rb_erase" },
	{ 0xd5263820, "mb_cache_destroy" },
	{ 0x578d5d74, "journal_load" },
	{ 0x2cd3086, "__down_failed_trylock" },
	{ 0xf5e2d0bb, "journal_flush" },
	{ 0xf1ef871, "posix_acl_alloc" },
	{ 0xaec4759f, "vprintk" },
	{ 0xf4dabc6d, "kmem_cache_free" },
	{ 0x20cb81ae, "__wait_on_buffer" },
	{ 0xd8282ff0, "posix_acl_equiv_mode" },
	{ 0x2283e22f, "page_symlink" },
	{ 0x3e70cabf, "sync_dirty_buffer" },
	{ 0x4e3567f7, "match_int" },
	{ 0xbe5a0d43, "unlock_page" },
	{ 0xd21a3a78, "path_release" },
	{ 0x69900829, "_spin_unlock" },
	{ 0x14bcb7a9, "__brelse" },
	{ 0xb7b92dc1, "journal_start_commit" },
	{ 0xab7100ed, "generic_removexattr" },
	{ 0xed2a39fd, "nobh_writepage" },
	{ 0x620585b4, "journal_lock_updates" },
	{ 0x3549124d, "inode_init_once" },
	{ 0x14b7e414, "journal_revoke" },
	{ 0x687929de, "page_follow_link_light" },
	{ 0x7dceceac, "capable" },
	{ 0x66a07de3, "journal_unlock_updates" },
	{ 0x9e5fca61, "open_by_devnum" },
	{ 0x59766c2c, "kmem_cache_alloc" },
	{ 0x94b8f07e, "blkdev_put" },
	{ 0xb2fd5ceb, "__put_user_4" },
	{ 0x8466d2d7, "journal_create" },
	{ 0x5edc096f, "dquot_initialize" },
	{ 0xfb37fa97, "vfs_get_dqblk" },
	{ 0x1c08c162, "path_lookup" },
	{ 0xe43e939d, "generic_file_mmap" },
	{ 0x65d430c4, "generic_file_sendfile" },
	{ 0xc7acfb72, "posix_acl_permission" },
	{ 0x96c81ddf, "mb_cache_entry_free" },
	{ 0xcb228f7f, "block_write_full_page" },
	{ 0xf3e3212, "bdevname" },
	{ 0x98b74c, "sync_blockdev" },
	{ 0x42cdb98e, "inode_sub_bytes" },
	{ 0xeba569f5, "create_empty_buffers" },
	{ 0xaed013b9, "posix_acl_valid" },
	{ 0xba8b14e3, "rb_prev" },
	{ 0x6497d619, "generic_commit_write" },
	{ 0x85ac7f10, "posix_acl_from_xattr" },
	{ 0x136dddc4, "do_sync_read" },
	{ 0x7664ed12, "vfs_set_dqblk" },
	{ 0xfa359bdd, "unlock_new_inode" },
	{ 0xc53eaf63, "journal_invalidatepage" },
	{ 0xc3cf1128, "in_group_p" },
	{ 0x155a62ab, "kill_block_super" },
	{ 0x6b2dc060, "dump_stack" },
	{ 0xde487e71, "inode_change_ok" },
	{ 0x77f12086, "submit_bh" },
	{ 0x2fa9b253, "dquot_drop" },
	{ 0x3f872f15, "mb_cache_entry_insert" },
	{ 0x7ec51f67, "rb_insert_color" },
	{ 0xbc2c3b7b, "kmem_cache_create" },
	{ 0xaabc99, "dquot_transfer" },
	{ 0xb2bce8f4, "register_filesystem" },
	{ 0x99523bd3, "journal_extend" },
	{ 0xa6b7bbb4, "iput" },
	{ 0x37a0cba, "kfree" },
	{ 0x2511d9c5, "nobh_prepare_write" },
	{ 0x8b0fc19c, "generic_permission" },
	{ 0xdb9448c2, "do_sync_write" },
	{ 0xbd01def8, "permission" },
	{ 0x8a86d9a2, "d_splice_alias" },
	{ 0x1d14ccc9, "journal_errno" },
	{ 0xea6e6880, "end_buffer_read_sync" },
	{ 0xfa70e60d, "get_sb_bdev" },
	{ 0xd4385098, "mb_cache_shrink" },
	{ 0x1adc49e, "sb_set_blocksize" },
	{ 0xf6246cb, "generic_readlink" },
	{ 0x6522f8f0, "put_page" },
	{ 0x85d4c9c1, "__blockdev_direct_IO" },
	{ 0xdaa2ffe1, "block_sync_page" },
	{ 0x59d6a937, "__find_get_block" },
	{ 0x44ba0f42, "rb_next" },
	{ 0x2b6244d4, "mark_buffer_dirty" },
	{ 0x60a4461c, "__up_wakeup" },
	{ 0x4c4b0c5f, "unregister_filesystem" },
	{ 0x4bcc0018, "init_special_inode" },
	{ 0x25da070, "snprintf" },
	{ 0xb5a706d8, "new_inode" },
	{ 0xaaf5d072, "generic_file_readv" },
	{ 0x8235805b, "memmove" },
	{ 0x52bd37d3, "__getblk" },
	{ 0x98e18d69, "journal_blocks_per_page" },
	{ 0xf2cd6a1, "set_blocksize" },
	{ 0x52b37123, "dquot_free_inode" },
	{ 0x96b27088, "__down_failed" },
	{ 0xa9ae4a59, "dquot_release" },
	{ 0x2679fa7b, "vfs_quota_off" },
	{ 0xd8cd0c4e, "journal_wipe" },
	{ 0x9b975669, "journal_forget" },
	{ 0x3e89d028, "dquot_commit_info" },
	{ 0x7ca55bc7, "journal_dirty_metadata" },
	{ 0xf2a644fb, "copy_from_user" },
	{ 0xfcc04dd0, "journal_init_dev" },
	{ 0xa1964a5a, "d_alloc_anon" },
	{ 0x60041ba5, "clear_inode" },
	{ 0x7414b686, "mb_cache_create" },
	{ 0xfa73d2ef, "bd_claim" },
	{ 0x38b48ed0, "page_put_link" },
	{ 0xd6ea04b7, "d_instantiate" },
	{ 0xfead2431, "journal_force_commit_nested" },
	{ 0x45e1c6c8, "journal_dirty_data" },
	{ 0xf73474a, "generic_block_bmap" },
	{ 0x8e87c4af, "rwsem_down_read_failed" },
	{ 0x375a0feb, "iget_locked" },
	{ 0xff151082, "vfs_set_dqinfo" },
	{ 0xb8dad101, "journal_force_commit" },
	{ 0xf95f7ae0, "truncate_inode_pages" },
	{ 0xd4d54e72, "dquot_commit" },
	{ 0xdf929370, "fs_overflowgid" },
};

static const char __module_depends[]
__attribute_used__
__attribute__((section(".modinfo"))) =
"depends=jbd";


MODULE_INFO(srcversion, "23C26B8BBC447BC6FF910A7");
